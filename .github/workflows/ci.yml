name: CI Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  backend-build-and-test:
    name: Backend - Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build, Test & Package with Maven
        run: ./mvnw -B verify --file pom.xml
        working-directory: ./backend

  frontend-build-and-test:
    name: Frontend - Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build Production Artifacts
        working-directory: ./frontend
        run: npm run build

  docker-validation:
    name: Docker - Validate Composition
    runs-on: ubuntu-latest
    needs: [backend-build-and-test, frontend-build-and-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      - name: Build Docker images via Compose
        run: docker-compose build

      - name: Run Docker Compose stack in background
        run: docker-compose up -d

      - name: Wait for services and run health check
        run: |
          sleep 10
          echo "Waiting for backend service..."
          timeout 60s bash -c 'until curl --fail http://localhost:8080/actuator/health; do sleep 5; done'
          echo "Backend is healthy!"

      - name: Verify running containers
        run: |
          echo "Listing running containers:"
          docker-compose ps
          echo -e "\nVerifying frontend is accessible..."
          curl --fail http://localhost:80
          echo -e "\nFrontend is accessible!"

      - name: Tear down Docker stack
        if: always()
        run: docker-compose down
